{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputDate = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst daysFld = document.querySelector('[data-days]');\nconst hoursFld = document.querySelector('[data-hours]');\nconst minutesFld = document.querySelector('[data-minutes]');\nconst secondsFld = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nstartBtn.addEventListener('click', handleTimer);\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        messageColor: '#ffffff',\n        messageSize: '16px',\n        backgroundColor: '#ef4040',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDates[0] - Date.now();\n    }\n  },\n};\n\nflatpickr(inputDate, options)\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction handleTimer() {\n  startBtn.disabled = true;\n  inputDate.disabled = true;\n\n  const timerInterval = setInterval(() => {\n    if (userSelectedDate > 1000) {\n      userSelectedDate -= 1000;\n      const { days, hours, minutes, seconds } = convertMs(userSelectedDate);\n      daysFld.textContent = addLeadingZero(days);\n      hoursFld.textContent = addLeadingZero(hours);\n      minutesFld.textContent = addLeadingZero(minutes);\n      secondsFld.textContent = addLeadingZero(seconds);\n    } else {\n      clearInterval(timerInterval);\n      inputDate.disabled = false;\n    }\n  }, 1000)\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}"],"names":["inputDate","startBtn","daysFld","hoursFld","minutesFld","secondsFld","userSelectedDate","handleTimer","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","timerInterval","addLeadingZero","value"],"mappings":"sGAKA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAa,SAAS,cAAc,gBAAgB,EAE1D,IAAIC,EACJL,EAAS,iBAAiB,QAASM,CAAW,EAC9CN,EAAS,SAAW,GAEpB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,KAAK,IAAG,GAC7BC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,aAAc,UACd,YAAa,OACb,gBAAiB,SACzB,CAAO,EACDT,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBK,EAAmBG,EAAc,CAAC,EAAI,KAAK,IAAG,EAEjD,CACH,EAEAE,EAAUX,EAAWQ,CAAO,EAE5B,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASV,GAAc,CACrBN,EAAS,SAAW,GACpBD,EAAU,SAAW,GAErB,MAAMkB,EAAgB,YAAY,IAAM,CACtC,GAAIZ,EAAmB,IAAM,CAC3BA,GAAoB,IACpB,KAAM,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUN,CAAgB,EACpEJ,EAAQ,YAAciB,EAAeL,CAAI,EACzCX,EAAS,YAAcgB,EAAeJ,CAAK,EAC3CX,EAAW,YAAce,EAAeH,CAAO,EAC/CX,EAAW,YAAcc,EAAeF,CAAO,CACrD,MACM,cAAcC,CAAa,EAC3BlB,EAAU,SAAW,EAExB,EAAE,GAAI,CACT,CAEA,SAASmB,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}